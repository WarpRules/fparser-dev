enum Terminals
{
    T_Zend, T_OrOp, T_AndOp, T_CompOp, T_Minus, T_Plus,
    T_TimesMulModOp, T_Bang, T_Pow, T_NumConst, T_If, T_Eval,
    T_PreFunc1, T_PreFunc2, T_PreFunc3, T_Identifier, T_LParens,
    T_RParens, T_Comma, T_Garbage,
    NUM_TERMINALS
};
enum NonTerminals
{
    NT_Zaccept, NT_exp, NT_A1, NT_A2, NT_f_parms_list_0,
    NT_f_parms_0, NT_f_parms, NT_unit_name,
    NUM_NONTERMINALS
};
static const char TerminalNames[NUM_TERMINALS][1+15] =
{
    "T_Zend", "T_OrOp", "T_AndOp", "T_CompOp", "T_Minus", "T_Plus",
    "T_TimesMulModOp", "T_Bang", "T_Pow", "T_NumConst", "T_If", "T_Eval",
    "T_PreFunc1", "T_PreFunc2", "T_PreFunc3", "T_Identifier", "T_LParens",
    "T_RParens", "T_Comma", "T_Garbage" 
};
static const char NonTerminalNames[NUM_NONTERMINALS][1+17] =
{
    "NT_Zaccept", "NT_exp", "NT_A1", "NT_A2", "NT_f_parms_list_0",
    "NT_f_parms_0", "NT_f_parms", "NT_unit_name" 
};
static const struct BisonState
{
    char Actions[NUM_TERMINALS], Goto[NUM_NONTERMINALS];
} States[] =
{
  // state 0
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,11,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,12,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,13,0,0,0,0,0,0} },
  { {  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, { 0,0,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 14,  0,  0,  0}, { 0,0,0,0,0,0,0,0} },
  // state 5
  { {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 15,  0,  0,  0}, { 0,0,0,0,16,0,0,0} },
  { {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,  0,  0}, { 0,0,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18,  0,  0,  0}, { 0,0,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 19,  0,  0,  0}, { 0,0,0,0,0,0,0,0} },
  { { -10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10, 15,-10,-10,-10}, { 0,0,0,0,20,0,0,0} },
  // state 10
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,21,0,0,0,0,0,0} },
  { {  22, 23, 24, 25, 26, 27, 28,  0, 29,  0,  0,  0,  0,  0,  0, 30,  0,  0,  0,  0}, { 0,0,0,0,0,0,0,31} },
  { { -19,-19,-19,-19,-19,-19,-19,-19, 29,-19,-19,-19,-19,-19,-19, 30,-19,-19,-19,-19}, { 0,0,0,0,0,0,0,31} },
  { { -18,-18,-18,-18,-18,-18,-18,-18, 29,-18,-18,-18,-18,-18,-18, 30,-18,-18,-18,-18}, { 0,0,0,0,0,0,0,31} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,32,0,0,0,0,0,0} },
  // state 15
  { { -24,-24,-24,-24,  1,-24,-24,  2,-24,  3,  4,  5,  6,  7,  8,  9, 10,-24,-24,-24}, { 0,33,0,0,0,34,35,0} },
  { {  -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5}, { 0,0,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,36,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,37,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,38,0,0,0,0,0,0} },
  // state 20
  { {  -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9}, { 0,0,0,0,0,0,0,0} },
  { {   0, 23, 24, 25, 26, 27, 28,  0, 29,  0,  0,  0,  0,  0,  0, 30,  0, 39,  0,  0}, { 0,0,0,0,0,0,0,31} },
  { { 127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127}, { 0,0,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,40,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,41,0,0,0,0,0,0} },
  // state 25
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,42,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,43,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,44,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,45,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,46,0,0,0,0,0,0} },
  // state 30
  { { -27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27}, { 0,0,0,0,0,0,0,0} },
  { { -21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21}, { 0,0,0,0,0,0,0,0} },
  { {  -6, 23, 24, 25, 26, 27, 28, -6, 29, -6, -6, -6, -6, -6, -6, 30, -6, -6, -6, -6}, { 0,0,47,0,0,0,0,31} },
  { { -26, 23, 24, 25, 26, 27, 28,-26, 29,-26,-26,-26,-26,-26,-26, 30,-26,-26,-26,-26}, { 0,0,0,0,0,0,0,31} },
  { {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 48,  0,  0}, { 0,0,0,0,0,0,0,0} },
  // state 35
  { { -23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23, 49,-23}, { 0,0,0,0,0,0,0,0} },
  { {   0, 23, 24, 25, 26, 27, 28,  0, 29,  0,  0,  0,  0,  0,  0, 30,  0, 50,  0,  0}, { 0,0,0,0,0,0,0,31} },
  { {   0, 23, 24, 25, 26, 27, 28,  0, 29,  0,  0,  0,  0,  0,  0, 30,  0,  0, 51,  0}, { 0,0,0,0,0,0,0,31} },
  { {   0, 23, 24, 25, 26, 27, 28,  0, 29,  0,  0,  0,  0,  0,  0, 30,  0,  0, 52,  0}, { 0,0,0,0,0,0,0,31} },
  { { -20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20}, { 0,0,0,0,0,0,0,0} },
  // state 40
  { { -14,-14, 24, 25, 26, 27, 28,-14, 29,-14,-14,-14,-14,-14,-14, 30,-14,-14,-14,-14}, { 0,0,0,0,0,0,0,31} },
  { { -13,-13,-13, 25, 26, 27, 28,-13, 29,-13,-13,-13,-13,-13,-13, 30,-13,-13,-13,-13}, { 0,0,0,0,0,0,0,31} },
  { { -15,-15,-15,-15, 26, 27, 28,-15, 29,-15,-15,-15,-15,-15,-15, 30,-15,-15,-15,-15}, { 0,0,0,0,0,0,0,31} },
  { { -12,-12,-12,-12,-12,-12, 28,-12, 29,-12,-12,-12,-12,-12,-12, 30,-12,-12,-12,-12}, { 0,0,0,0,0,0,0,31} },
  { { -11,-11,-11,-11,-11,-11, 28,-11, 29,-11,-11,-11,-11,-11,-11, 30,-11,-11,-11,-11}, { 0,0,0,0,0,0,0,31} },
  // state 45
  { { -16,-16,-16,-16,-16,-16,-16,-16, 29,-16,-16,-16,-16,-16,-16, 30,-16,-16,-16,-16}, { 0,0,0,0,0,0,0,31} },
  { { -17,-17,-17,-17,-17,-17,-17,-17, 29,-17,-17,-17,-17,-17,-17, 30,-17,-17,-17,-17}, { 0,0,0,0,0,0,0,31} },
  { {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 53,  0}, { 0,0,0,0,0,0,0,0} },
  { { -22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22}, { 0,0,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,54,0,0,0,0,0,0} },
  // state 50
  { {  -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2}, { 0,0,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,55,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,56,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,57,0,0,0,0,0,0} },
  { { -25, 23, 24, 25, 26, 27, 28,-25, 29,-25,-25,-25,-25,-25,-25, 30,-25,-25,-25,-25}, { 0,0,0,0,0,0,0,31} },
  // state 55
  { {   0, 23, 24, 25, 26, 27, 28,  0, 29,  0,  0,  0,  0,  0,  0, 30,  0, 58,  0,  0}, { 0,0,0,0,0,0,0,31} },
  { {   0, 23, 24, 25, 26, 27, 28,  0, 29,  0,  0,  0,  0,  0,  0, 30,  0,  0, 59,  0}, { 0,0,0,0,0,0,0,31} },
  { {  -7, 23, 24, 25, 26, 27, 28, -7, 29, -7, -7, -7, -7, -7, -7, 30, -7, -7, -7, -7}, { 0,0,0,60,0,0,0,31} },
  { {  -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3}, { 0,0,0,0,0,0,0,0} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,61,0,0,0,0,0,0} },
  // state 60
  { {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 62,  0}, { 0,0,0,0,0,0,0,0} },
  { {   0, 23, 24, 25, 26, 27, 28,  0, 29,  0,  0,  0,  0,  0,  0, 30,  0, 63,  0,  0}, { 0,0,0,0,0,0,0,31} },
  { {   0,  0,  0,  0,  1,  0,  0,  2,  0,  3,  4,  5,  6,  7,  8,  9, 10,  0,  0,  0}, { 0,64,0,0,0,0,0,0} },
  { {  -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4}, { 0,0,0,0,0,0,0,0} },
  { {   0, 23, 24, 25, 26, 27, 28,  0, 29,  0,  0,  0,  0,  0,  0, 30,  0, 65,  0,  0}, { 0,0,0,0,0,0,0,31} },
  // state 65
  { {  -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8}, { 0,0,0,0,0,0,0,0} },
};
static const struct BisonReduce
{
  int          n_reduce:8;
  NonTerminals produced_nonterminal:8;
} BisonGrammar[] =
{
  {  2, NT_Zaccept       }, /* Zaccept: exp Zend */
  {  1, NT_exp           }, /* exp: NumConst */
  {  4, NT_exp           }, /*    | PreFunc1 LParens exp RParens */
  {  6, NT_exp           }, /*    | PreFunc2 LParens exp Comma exp RParens */
  {  8, NT_exp           }, /*    | PreFunc3 LParens exp Comma exp Comma exp RParens */
  {  2, NT_exp           }, /*    | Eval f_parms_list_0 */
  {  0, NT_A1            }, /* A1: (* empty *) */
  {  0, NT_A2            }, /* A2: (* empty *) */
  { 10, NT_exp           }, /* exp: If LParens exp A1 Comma exp A2 Comma exp RParens */
  {  2, NT_exp           }, /*    | Identifier f_parms_list_0 */
  {  1, NT_exp           }, /*    | Identifier */
  {  3, NT_exp           }, /*    | exp Plus exp */
  {  3, NT_exp           }, /*    | exp Minus exp */
  {  3, NT_exp           }, /*    | exp AndOp exp */
  {  3, NT_exp           }, /*    | exp OrOp exp */
  {  3, NT_exp           }, /*    | exp CompOp exp */
  {  3, NT_exp           }, /*    | exp TimesMulModOp exp */
  {  3, NT_exp           }, /*    | exp Pow exp */
  {  2, NT_exp           }, /*    | Bang exp */
  {  2, NT_exp           }, /*    | Minus exp */
  {  3, NT_exp           }, /*    | LParens exp RParens */
  {  2, NT_exp           }, /*    | exp unit_name */
  {  3, NT_f_parms_list_0}, /* f_parms_list_0: LParens f_parms_0 RParens */
  {  1, NT_f_parms_0     }, /* f_parms_0: f_parms */
  {  0, NT_f_parms_0     }, /*          | (* empty *) */
  {  3, NT_f_parms       }, /* f_parms: f_parms Comma exp */
  {  1, NT_f_parms       }, /*        | exp */
  {  1, NT_unit_name     }, /* unit_name: Identifier */
};
