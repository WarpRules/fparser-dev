/* Function Parser for C++ v5.0.0   

  NOTE:
  Do not include this file in your project. The fparser.cc file #includes
this file internally and thus you don't need to do anything (other than keep
this file in the same directory as fparser.cc).

  This file contains generated code and is thus not intended to be to
be modified by hand. It was generated by util/bytecoderules_parser, which
is available in the development package.
*/
#define HasInvalidRangesOpcode HasInvalidRangesOpcode<IsComplexType<Value_t>::value>
#define FP_TRACE_BYTECODE_OPTIMIZATION(srcline,from,to,with) \
    /*std::cout << "Changing \"" from "\"\t(line " #srcline ")\n" \
                   "    into \"" to "\"\n" with << std::flush*/
#define FP_TRACE_OPCODENAME(op) \
    (op < VarBegin \
        ? FP_GetOpcodeName(OPCODE(op)) \
        : findName(mData->mNamePtrs,op,NameData<Value_t>::VARIABLE))
#define FP_TRACE_BYTECODE_ADD(opcode) \
    /*std::cout << "Adding opcode: " << FP_TRACE_OPCODENAME(opcode) \
                << ", bytecode length " << mData->mByteCode.size() \
                << ", pointer is " << (void*)ByteCodePtr \
                << ", code is " << (mData->mByteCode.empty() \
                                       ? (void*)0 \
                                       : (void*)&mData->mByteCode[0]) \
                << std::endl*/
